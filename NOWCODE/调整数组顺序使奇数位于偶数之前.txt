输入一个整数数组，实现一个函数来调整该数组中数字的顺序，
使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和
奇数，偶数和偶数之间的相对位置不变。


import java.util.Queue;
import java.util.LinkedList;

public class Solution {
    public void reOrderArray(int [] array) {
        Queue<Integer> a=new LinkedList<>();
        Queue<Integer> b=new LinkedList<>();
        for(int i=0;i<array.length;i++){
            int c=array[i];
            if(c%2==0){
                b.offer(c);
            }
            else{
                a.offer(c);
            }
        }
   
        for(int i=0;i<array.length;i++){
           if(!a.isEmpty()){
                array[i]=a.poll();
            }
            else if(!b.isEmpty()){
               array[i]=b.poll(); 
            }
        }
        
    }
}