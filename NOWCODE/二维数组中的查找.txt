在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，
每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。


public class Solution {
    public boolean Find(int target, int [][] array) {
        int row=array.length;//行
        int coll=array[0].length;//列
        boolean k=false;
        if(row!=0&&row>0&&coll>0){
            int a=0;
            int b=coll-1;
            while(a<row&&b>=0){
                if(array[a][b]==target){
                    k=true;
                    break;
                }
                else if(array[a][b]>target){
                    b--;
                }
                else{
                    a++;
                }
            }
        }
        return k;
    }
}

public class Solution {
    public boolean Find(int target, int [][] array) {
        if(array==null)
            return false;
        int i=0;;
        int j=array[0].length-1;
        while(i<array.length&&j>=0){
            if(target<array[i][j]){
                j--;
            }
            else if(target>array[i][j]){
                i++;
            }
            else{
                return true;
            }
        }
        return false;
    }
}